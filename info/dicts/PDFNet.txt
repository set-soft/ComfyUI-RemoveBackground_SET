Analyzing: models/PDFNet_Best.pth

--- PyTorch Model Keys ---


Glob.0.0.weight [128, 128, 3, 3]
Glob.0.0.bias [128]
Glob.0.1.weight [128]
decoder.FSE_mix.0.I_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.0.I_channelswich.0.bias [128]
decoder.FSE_mix.0.I_channelswich.1.weight [128]
decoder.FSE_mix.0.P_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.0.P_channelswich.0.bias [128]
decoder.FSE_mix.0.P_channelswich.1.weight [128]
decoder.FSE_mix.0.D_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.0.D_channelswich.0.bias [128]
decoder.FSE_mix.0.D_channelswich.1.weight [128]
decoder.FSE_mix.0.IP.Att.in_proj_weight [384, 128]
decoder.FSE_mix.0.IP.Att.out_proj.weight [128, 128]
decoder.FSE_mix.0.IP.Norm1.weight [128]
decoder.FSE_mix.0.IP.FFN.w1.weight [128, 128]
decoder.FSE_mix.0.IP.FFN.w2.weight [128, 128]
decoder.FSE_mix.0.IP.FFN.w3.weight [128, 128]
decoder.FSE_mix.0.IP.Norm2.weight [128]
decoder.FSE_mix.0.PI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.0.PI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.0.PI.Norm1.weight [128]
decoder.FSE_mix.0.PI.FFN.w1.weight [128, 128]
decoder.FSE_mix.0.PI.FFN.w2.weight [128, 128]
decoder.FSE_mix.0.PI.FFN.w3.weight [128, 128]
decoder.FSE_mix.0.PI.Norm2.weight [128]
decoder.FSE_mix.0.ID.Att.in_proj_weight [384, 128]
decoder.FSE_mix.0.ID.Att.out_proj.weight [128, 128]
decoder.FSE_mix.0.ID.Norm1.weight [128]
decoder.FSE_mix.0.ID.FFN.w1.weight [128, 128]
decoder.FSE_mix.0.ID.FFN.w2.weight [128, 128]
decoder.FSE_mix.0.ID.FFN.w3.weight [128, 128]
decoder.FSE_mix.0.ID.Norm2.weight [128]
decoder.FSE_mix.0.DI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.0.DI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.0.DI.Norm1.weight [128]
decoder.FSE_mix.0.DI.FFN.w1.weight [128, 128]
decoder.FSE_mix.0.DI.FFN.w2.weight [128, 128]
decoder.FSE_mix.0.DI.FFN.w3.weight [128, 128]
decoder.FSE_mix.0.DI.Norm2.weight [128]
decoder.FSE_mix.1.I_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.1.I_channelswich.0.bias [128]
decoder.FSE_mix.1.I_channelswich.1.weight [128]
decoder.FSE_mix.1.P_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.1.P_channelswich.0.bias [128]
decoder.FSE_mix.1.P_channelswich.1.weight [128]
decoder.FSE_mix.1.D_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.1.D_channelswich.0.bias [128]
decoder.FSE_mix.1.D_channelswich.1.weight [128]
decoder.FSE_mix.1.IP.Att.in_proj_weight [384, 128]
decoder.FSE_mix.1.IP.Att.out_proj.weight [128, 128]
decoder.FSE_mix.1.IP.Norm1.weight [128]
decoder.FSE_mix.1.IP.FFN.w1.weight [128, 128]
decoder.FSE_mix.1.IP.FFN.w2.weight [128, 128]
decoder.FSE_mix.1.IP.FFN.w3.weight [128, 128]
decoder.FSE_mix.1.IP.Norm2.weight [128]
decoder.FSE_mix.1.PI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.1.PI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.1.PI.Norm1.weight [128]
decoder.FSE_mix.1.PI.FFN.w1.weight [128, 128]
decoder.FSE_mix.1.PI.FFN.w2.weight [128, 128]
decoder.FSE_mix.1.PI.FFN.w3.weight [128, 128]
decoder.FSE_mix.1.PI.Norm2.weight [128]
decoder.FSE_mix.1.ID.Att.in_proj_weight [384, 128]
decoder.FSE_mix.1.ID.Att.out_proj.weight [128, 128]
decoder.FSE_mix.1.ID.Norm1.weight [128]
decoder.FSE_mix.1.ID.FFN.w1.weight [128, 128]
decoder.FSE_mix.1.ID.FFN.w2.weight [128, 128]
decoder.FSE_mix.1.ID.FFN.w3.weight [128, 128]
decoder.FSE_mix.1.ID.Norm2.weight [128]
decoder.FSE_mix.1.DI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.1.DI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.1.DI.Norm1.weight [128]
decoder.FSE_mix.1.DI.FFN.w1.weight [128, 128]
decoder.FSE_mix.1.DI.FFN.w2.weight [128, 128]
decoder.FSE_mix.1.DI.FFN.w3.weight [128, 128]
decoder.FSE_mix.1.DI.Norm2.weight [128]
decoder.FSE_mix.2.I_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.2.I_channelswich.0.bias [128]
decoder.FSE_mix.2.I_channelswich.1.weight [128]
decoder.FSE_mix.2.P_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.2.P_channelswich.0.bias [128]
decoder.FSE_mix.2.P_channelswich.1.weight [128]
decoder.FSE_mix.2.D_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.2.D_channelswich.0.bias [128]
decoder.FSE_mix.2.D_channelswich.1.weight [128]
decoder.FSE_mix.2.IP.Att.in_proj_weight [384, 128]
decoder.FSE_mix.2.IP.Att.out_proj.weight [128, 128]
decoder.FSE_mix.2.IP.Norm1.weight [128]
decoder.FSE_mix.2.IP.FFN.w1.weight [128, 128]
decoder.FSE_mix.2.IP.FFN.w2.weight [128, 128]
decoder.FSE_mix.2.IP.FFN.w3.weight [128, 128]
decoder.FSE_mix.2.IP.Norm2.weight [128]
decoder.FSE_mix.2.PI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.2.PI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.2.PI.Norm1.weight [128]
decoder.FSE_mix.2.PI.FFN.w1.weight [128, 128]
decoder.FSE_mix.2.PI.FFN.w2.weight [128, 128]
decoder.FSE_mix.2.PI.FFN.w3.weight [128, 128]
decoder.FSE_mix.2.PI.Norm2.weight [128]
decoder.FSE_mix.2.ID.Att.in_proj_weight [384, 128]
decoder.FSE_mix.2.ID.Att.out_proj.weight [128, 128]
decoder.FSE_mix.2.ID.Norm1.weight [128]
decoder.FSE_mix.2.ID.FFN.w1.weight [128, 128]
decoder.FSE_mix.2.ID.FFN.w2.weight [128, 128]
decoder.FSE_mix.2.ID.FFN.w3.weight [128, 128]
decoder.FSE_mix.2.ID.Norm2.weight [128]
decoder.FSE_mix.2.DI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.2.DI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.2.DI.Norm1.weight [128]
decoder.FSE_mix.2.DI.FFN.w1.weight [128, 128]
decoder.FSE_mix.2.DI.FFN.w2.weight [128, 128]
decoder.FSE_mix.2.DI.FFN.w3.weight [128, 128]
decoder.FSE_mix.2.DI.Norm2.weight [128]
decoder.FSE_mix.3.I_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.3.I_channelswich.0.bias [128]
decoder.FSE_mix.3.I_channelswich.1.weight [128]
decoder.FSE_mix.3.P_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.3.P_channelswich.0.bias [128]
decoder.FSE_mix.3.P_channelswich.1.weight [128]
decoder.FSE_mix.3.D_channelswich.0.weight [128, 256, 3, 3]
decoder.FSE_mix.3.D_channelswich.0.bias [128]
decoder.FSE_mix.3.D_channelswich.1.weight [128]
decoder.FSE_mix.3.IP.Att.in_proj_weight [384, 128]
decoder.FSE_mix.3.IP.Att.out_proj.weight [128, 128]
decoder.FSE_mix.3.IP.Norm1.weight [128]
decoder.FSE_mix.3.IP.FFN.w1.weight [128, 128]
decoder.FSE_mix.3.IP.FFN.w2.weight [128, 128]
decoder.FSE_mix.3.IP.FFN.w3.weight [128, 128]
decoder.FSE_mix.3.IP.Norm2.weight [128]
decoder.FSE_mix.3.PI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.3.PI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.3.PI.Norm1.weight [128]
decoder.FSE_mix.3.PI.FFN.w1.weight [128, 128]
decoder.FSE_mix.3.PI.FFN.w2.weight [128, 128]
decoder.FSE_mix.3.PI.FFN.w3.weight [128, 128]
decoder.FSE_mix.3.PI.Norm2.weight [128]
decoder.FSE_mix.3.ID.Att.in_proj_weight [384, 128]
decoder.FSE_mix.3.ID.Att.out_proj.weight [128, 128]
decoder.FSE_mix.3.ID.Norm1.weight [128]
decoder.FSE_mix.3.ID.FFN.w1.weight [128, 128]
decoder.FSE_mix.3.ID.FFN.w2.weight [128, 128]
decoder.FSE_mix.3.ID.FFN.w3.weight [128, 128]
decoder.FSE_mix.3.ID.Norm2.weight [128]
decoder.FSE_mix.3.DI.Att.in_proj_weight [384, 128]
decoder.FSE_mix.3.DI.Att.out_proj.weight [128, 128]
decoder.FSE_mix.3.DI.Norm1.weight [128]
decoder.FSE_mix.3.DI.FFN.w1.weight [128, 128]
decoder.FSE_mix.3.DI.FFN.w2.weight [128, 128]
decoder.FSE_mix.3.DI.FFN.w3.weight [128, 128]
decoder.FSE_mix.3.DI.Norm2.weight [128]
decoder.shallow.0.weight [128, 6, 4, 4]
decoder.shallow.0.bias [128]
decoder.shallow.1.0.weight [128, 128, 3, 3]
decoder.shallow.1.0.bias [128]
decoder.shallow.1.1.weight [128]
decoder.upsample1.0.0.weight [128, 128, 3, 3]
decoder.upsample1.0.0.bias [128]
decoder.upsample1.0.1.weight [128]
decoder.upsample2.0.0.weight [128, 128, 3, 3]
decoder.upsample2.0.0.bias [128]
decoder.upsample2.0.1.weight [128]
decoder.channel_mix.0.0.weight [128, 384, 3, 3]
decoder.channel_mix.0.0.bias [128]
decoder.channel_mix.0.1.weight [128]
decoder.channel_mix.1.0.weight [128, 384, 3, 3]
decoder.channel_mix.1.0.bias [128]
decoder.channel_mix.1.1.weight [128]
decoder.channel_mix.2.0.weight [128, 384, 3, 3]
decoder.channel_mix.2.0.bias [128]
decoder.channel_mix.2.1.weight [128]
decoder.channel_mix.3.0.weight [128, 384, 3, 3]
decoder.channel_mix.3.0.bias [128]
decoder.channel_mix.3.1.weight [128]
decoder.Bside.0.weight [1, 128, 3, 3]
decoder.Bside.0.bias [1]
decoder.Bside.1.weight [1, 128, 3, 3]
decoder.Bside.1.bias [1]
decoder.Bside.2.weight [1, 128, 3, 3]
decoder.Bside.2.bias [1]
decoder.Bside.3.weight [1, 128, 3, 3]
decoder.Bside.3.bias [1]
decoder.Bside.4.weight [1, 128, 3, 3]
decoder.Bside.4.bias [1]
decoder.Bside.5.weight [1, 128, 3, 3]
decoder.Bside.5.bias [1]
depth_decoder.Decoder.0.0.0.weight [256, 256, 3, 3]
depth_decoder.Decoder.0.0.0.bias [256]
depth_decoder.Decoder.0.0.1.weight [256]
depth_decoder.Decoder.0.1.0.weight [128, 256, 3, 3]
depth_decoder.Decoder.0.1.0.bias [128]
depth_decoder.Decoder.0.1.1.weight [128]
depth_decoder.Decoder.1.0.0.weight [256, 256, 3, 3]
depth_decoder.Decoder.1.0.0.bias [256]
depth_decoder.Decoder.1.0.1.weight [256]
depth_decoder.Decoder.1.1.0.weight [128, 256, 3, 3]
depth_decoder.Decoder.1.1.0.bias [128]
depth_decoder.Decoder.1.1.1.weight [128]
depth_decoder.Decoder.2.0.0.weight [256, 256, 3, 3]
depth_decoder.Decoder.2.0.0.bias [256]
depth_decoder.Decoder.2.0.1.weight [256]
depth_decoder.Decoder.2.1.0.weight [128, 256, 3, 3]
depth_decoder.Decoder.2.1.0.bias [128]
depth_decoder.Decoder.2.1.1.weight [128]
depth_decoder.Decoder.3.0.0.weight [256, 256, 3, 3]
depth_decoder.Decoder.3.0.0.bias [256]
depth_decoder.Decoder.3.0.1.weight [256]
depth_decoder.Decoder.3.1.0.weight [128, 256, 3, 3]
depth_decoder.Decoder.3.1.0.bias [128]
depth_decoder.Decoder.3.1.1.weight [128]
depth_decoder.shallow.0.weight [128, 3, 3, 3]
depth_decoder.shallow.0.bias [128]
depth_decoder.upsample1.0.weight [128, 128, 3, 3]
depth_decoder.upsample1.0.bias [128]
depth_decoder.upsample1.1.weight [128]
depth_decoder.upsample2.0.weight [128, 128, 3, 3]
depth_decoder.upsample2.0.bias [128]
depth_decoder.upsample2.1.weight [128]
depth_decoder.Bside.0.weight [1, 128, 3, 3]
depth_decoder.Bside.0.bias [1]
depth_decoder.Bside.1.weight [1, 128, 3, 3]
depth_decoder.Bside.1.bias [1]
depth_decoder.Bside.2.weight [1, 128, 3, 3]
depth_decoder.Bside.2.bias [1]
depth_decoder.Bside.3.weight [1, 128, 3, 3]
depth_decoder.Bside.3.bias [1]
depth_decoder.Bside.4.weight [1, 128, 3, 3]
depth_decoder.Bside.4.bias [1]
channel_mix.0.weight [128, 512, 3, 3]
channel_mix.0.bias [128]
channel_mix.1.weight [128]
channel_mix4.0.weight [128, 1024, 3, 3]
channel_mix4.0.bias [128]
channel_mix4.1.weight [128]
channel_mix3.0.weight [128, 512, 3, 3]
channel_mix3.0.bias [128]
channel_mix3.1.weight [128]
channel_mix2.0.weight [128, 256, 3, 3]
channel_mix2.0.bias [128]
channel_mix2.1.weight [128]
channel_mix1.0.weight [128, 128, 3, 3]
channel_mix1.0.bias [128]
channel_mix1.1.weight [128]
encoder.absolute_pos_embed [1, 128, 56, 56]
encoder.patch_embed.proj.weight [128, 3, 4, 4]
encoder.patch_embed.proj.bias [128]
encoder.patch_embed.norm.weight [128]
encoder.patch_embed.norm.bias [128]
encoder.layers.0.blocks.0.norm1.weight [128]
encoder.layers.0.blocks.0.norm1.bias [128]
encoder.layers.0.blocks.0.attn.relative_position_bias_table [529, 4]
encoder.layers.0.blocks.0.attn.relative_position_index [144, 144]
encoder.layers.0.blocks.0.attn.qkv.weight [384, 128]
encoder.layers.0.blocks.0.attn.qkv.bias [384]
encoder.layers.0.blocks.0.attn.proj.weight [128, 128]
encoder.layers.0.blocks.0.attn.proj.bias [128]
encoder.layers.0.blocks.0.norm2.weight [128]
encoder.layers.0.blocks.0.norm2.bias [128]
encoder.layers.0.blocks.0.mlp.fc1.weight [512, 128]
encoder.layers.0.blocks.0.mlp.fc1.bias [512]
encoder.layers.0.blocks.0.mlp.fc2.weight [128, 512]
encoder.layers.0.blocks.0.mlp.fc2.bias [128]
encoder.layers.0.blocks.1.norm1.weight [128]
encoder.layers.0.blocks.1.norm1.bias [128]
encoder.layers.0.blocks.1.attn.relative_position_bias_table [529, 4]
encoder.layers.0.blocks.1.attn.relative_position_index [144, 144]
encoder.layers.0.blocks.1.attn.qkv.weight [384, 128]
encoder.layers.0.blocks.1.attn.qkv.bias [384]
encoder.layers.0.blocks.1.attn.proj.weight [128, 128]
encoder.layers.0.blocks.1.attn.proj.bias [128]
encoder.layers.0.blocks.1.norm2.weight [128]
encoder.layers.0.blocks.1.norm2.bias [128]
encoder.layers.0.blocks.1.mlp.fc1.weight [512, 128]
encoder.layers.0.blocks.1.mlp.fc1.bias [512]
encoder.layers.0.blocks.1.mlp.fc2.weight [128, 512]
encoder.layers.0.blocks.1.mlp.fc2.bias [128]
encoder.layers.0.downsample.reduction.weight [256, 512]
encoder.layers.0.downsample.norm.weight [512]
encoder.layers.0.downsample.norm.bias [512]
encoder.layers.1.blocks.0.norm1.weight [256]
encoder.layers.1.blocks.0.norm1.bias [256]
encoder.layers.1.blocks.0.attn.relative_position_bias_table [529, 8]
encoder.layers.1.blocks.0.attn.relative_position_index [144, 144]
encoder.layers.1.blocks.0.attn.qkv.weight [768, 256]
encoder.layers.1.blocks.0.attn.qkv.bias [768]
encoder.layers.1.blocks.0.attn.proj.weight [256, 256]
encoder.layers.1.blocks.0.attn.proj.bias [256]
encoder.layers.1.blocks.0.norm2.weight [256]
encoder.layers.1.blocks.0.norm2.bias [256]
encoder.layers.1.blocks.0.mlp.fc1.weight [1024, 256]
encoder.layers.1.blocks.0.mlp.fc1.bias [1024]
encoder.layers.1.blocks.0.mlp.fc2.weight [256, 1024]
encoder.layers.1.blocks.0.mlp.fc2.bias [256]
encoder.layers.1.blocks.1.norm1.weight [256]
encoder.layers.1.blocks.1.norm1.bias [256]
encoder.layers.1.blocks.1.attn.relative_position_bias_table [529, 8]
encoder.layers.1.blocks.1.attn.relative_position_index [144, 144]
encoder.layers.1.blocks.1.attn.qkv.weight [768, 256]
encoder.layers.1.blocks.1.attn.qkv.bias [768]
encoder.layers.1.blocks.1.attn.proj.weight [256, 256]
encoder.layers.1.blocks.1.attn.proj.bias [256]
encoder.layers.1.blocks.1.norm2.weight [256]
encoder.layers.1.blocks.1.norm2.bias [256]
encoder.layers.1.blocks.1.mlp.fc1.weight [1024, 256]
encoder.layers.1.blocks.1.mlp.fc1.bias [1024]
encoder.layers.1.blocks.1.mlp.fc2.weight [256, 1024]
encoder.layers.1.blocks.1.mlp.fc2.bias [256]
encoder.layers.1.downsample.reduction.weight [512, 1024]
encoder.layers.1.downsample.norm.weight [1024]
encoder.layers.1.downsample.norm.bias [1024]
encoder.layers.2.blocks.0.norm1.weight [512]
encoder.layers.2.blocks.0.norm1.bias [512]
encoder.layers.2.blocks.0.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.0.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.0.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.0.attn.qkv.bias [1536]
encoder.layers.2.blocks.0.attn.proj.weight [512, 512]
encoder.layers.2.blocks.0.attn.proj.bias [512]
encoder.layers.2.blocks.0.norm2.weight [512]
encoder.layers.2.blocks.0.norm2.bias [512]
encoder.layers.2.blocks.0.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.0.mlp.fc1.bias [2048]
encoder.layers.2.blocks.0.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.0.mlp.fc2.bias [512]
encoder.layers.2.blocks.1.norm1.weight [512]
encoder.layers.2.blocks.1.norm1.bias [512]
encoder.layers.2.blocks.1.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.1.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.1.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.1.attn.qkv.bias [1536]
encoder.layers.2.blocks.1.attn.proj.weight [512, 512]
encoder.layers.2.blocks.1.attn.proj.bias [512]
encoder.layers.2.blocks.1.norm2.weight [512]
encoder.layers.2.blocks.1.norm2.bias [512]
encoder.layers.2.blocks.1.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.1.mlp.fc1.bias [2048]
encoder.layers.2.blocks.1.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.1.mlp.fc2.bias [512]
encoder.layers.2.blocks.2.norm1.weight [512]
encoder.layers.2.blocks.2.norm1.bias [512]
encoder.layers.2.blocks.2.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.2.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.2.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.2.attn.qkv.bias [1536]
encoder.layers.2.blocks.2.attn.proj.weight [512, 512]
encoder.layers.2.blocks.2.attn.proj.bias [512]
encoder.layers.2.blocks.2.norm2.weight [512]
encoder.layers.2.blocks.2.norm2.bias [512]
encoder.layers.2.blocks.2.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.2.mlp.fc1.bias [2048]
encoder.layers.2.blocks.2.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.2.mlp.fc2.bias [512]
encoder.layers.2.blocks.3.norm1.weight [512]
encoder.layers.2.blocks.3.norm1.bias [512]
encoder.layers.2.blocks.3.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.3.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.3.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.3.attn.qkv.bias [1536]
encoder.layers.2.blocks.3.attn.proj.weight [512, 512]
encoder.layers.2.blocks.3.attn.proj.bias [512]
encoder.layers.2.blocks.3.norm2.weight [512]
encoder.layers.2.blocks.3.norm2.bias [512]
encoder.layers.2.blocks.3.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.3.mlp.fc1.bias [2048]
encoder.layers.2.blocks.3.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.3.mlp.fc2.bias [512]
encoder.layers.2.blocks.4.norm1.weight [512]
encoder.layers.2.blocks.4.norm1.bias [512]
encoder.layers.2.blocks.4.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.4.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.4.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.4.attn.qkv.bias [1536]
encoder.layers.2.blocks.4.attn.proj.weight [512, 512]
encoder.layers.2.blocks.4.attn.proj.bias [512]
encoder.layers.2.blocks.4.norm2.weight [512]
encoder.layers.2.blocks.4.norm2.bias [512]
encoder.layers.2.blocks.4.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.4.mlp.fc1.bias [2048]
encoder.layers.2.blocks.4.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.4.mlp.fc2.bias [512]
encoder.layers.2.blocks.5.norm1.weight [512]
encoder.layers.2.blocks.5.norm1.bias [512]
encoder.layers.2.blocks.5.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.5.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.5.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.5.attn.qkv.bias [1536]
encoder.layers.2.blocks.5.attn.proj.weight [512, 512]
encoder.layers.2.blocks.5.attn.proj.bias [512]
encoder.layers.2.blocks.5.norm2.weight [512]
encoder.layers.2.blocks.5.norm2.bias [512]
encoder.layers.2.blocks.5.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.5.mlp.fc1.bias [2048]
encoder.layers.2.blocks.5.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.5.mlp.fc2.bias [512]
encoder.layers.2.blocks.6.norm1.weight [512]
encoder.layers.2.blocks.6.norm1.bias [512]
encoder.layers.2.blocks.6.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.6.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.6.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.6.attn.qkv.bias [1536]
encoder.layers.2.blocks.6.attn.proj.weight [512, 512]
encoder.layers.2.blocks.6.attn.proj.bias [512]
encoder.layers.2.blocks.6.norm2.weight [512]
encoder.layers.2.blocks.6.norm2.bias [512]
encoder.layers.2.blocks.6.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.6.mlp.fc1.bias [2048]
encoder.layers.2.blocks.6.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.6.mlp.fc2.bias [512]
encoder.layers.2.blocks.7.norm1.weight [512]
encoder.layers.2.blocks.7.norm1.bias [512]
encoder.layers.2.blocks.7.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.7.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.7.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.7.attn.qkv.bias [1536]
encoder.layers.2.blocks.7.attn.proj.weight [512, 512]
encoder.layers.2.blocks.7.attn.proj.bias [512]
encoder.layers.2.blocks.7.norm2.weight [512]
encoder.layers.2.blocks.7.norm2.bias [512]
encoder.layers.2.blocks.7.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.7.mlp.fc1.bias [2048]
encoder.layers.2.blocks.7.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.7.mlp.fc2.bias [512]
encoder.layers.2.blocks.8.norm1.weight [512]
encoder.layers.2.blocks.8.norm1.bias [512]
encoder.layers.2.blocks.8.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.8.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.8.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.8.attn.qkv.bias [1536]
encoder.layers.2.blocks.8.attn.proj.weight [512, 512]
encoder.layers.2.blocks.8.attn.proj.bias [512]
encoder.layers.2.blocks.8.norm2.weight [512]
encoder.layers.2.blocks.8.norm2.bias [512]
encoder.layers.2.blocks.8.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.8.mlp.fc1.bias [2048]
encoder.layers.2.blocks.8.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.8.mlp.fc2.bias [512]
encoder.layers.2.blocks.9.norm1.weight [512]
encoder.layers.2.blocks.9.norm1.bias [512]
encoder.layers.2.blocks.9.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.9.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.9.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.9.attn.qkv.bias [1536]
encoder.layers.2.blocks.9.attn.proj.weight [512, 512]
encoder.layers.2.blocks.9.attn.proj.bias [512]
encoder.layers.2.blocks.9.norm2.weight [512]
encoder.layers.2.blocks.9.norm2.bias [512]
encoder.layers.2.blocks.9.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.9.mlp.fc1.bias [2048]
encoder.layers.2.blocks.9.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.9.mlp.fc2.bias [512]
encoder.layers.2.blocks.10.norm1.weight [512]
encoder.layers.2.blocks.10.norm1.bias [512]
encoder.layers.2.blocks.10.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.10.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.10.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.10.attn.qkv.bias [1536]
encoder.layers.2.blocks.10.attn.proj.weight [512, 512]
encoder.layers.2.blocks.10.attn.proj.bias [512]
encoder.layers.2.blocks.10.norm2.weight [512]
encoder.layers.2.blocks.10.norm2.bias [512]
encoder.layers.2.blocks.10.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.10.mlp.fc1.bias [2048]
encoder.layers.2.blocks.10.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.10.mlp.fc2.bias [512]
encoder.layers.2.blocks.11.norm1.weight [512]
encoder.layers.2.blocks.11.norm1.bias [512]
encoder.layers.2.blocks.11.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.11.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.11.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.11.attn.qkv.bias [1536]
encoder.layers.2.blocks.11.attn.proj.weight [512, 512]
encoder.layers.2.blocks.11.attn.proj.bias [512]
encoder.layers.2.blocks.11.norm2.weight [512]
encoder.layers.2.blocks.11.norm2.bias [512]
encoder.layers.2.blocks.11.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.11.mlp.fc1.bias [2048]
encoder.layers.2.blocks.11.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.11.mlp.fc2.bias [512]
encoder.layers.2.blocks.12.norm1.weight [512]
encoder.layers.2.blocks.12.norm1.bias [512]
encoder.layers.2.blocks.12.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.12.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.12.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.12.attn.qkv.bias [1536]
encoder.layers.2.blocks.12.attn.proj.weight [512, 512]
encoder.layers.2.blocks.12.attn.proj.bias [512]
encoder.layers.2.blocks.12.norm2.weight [512]
encoder.layers.2.blocks.12.norm2.bias [512]
encoder.layers.2.blocks.12.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.12.mlp.fc1.bias [2048]
encoder.layers.2.blocks.12.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.12.mlp.fc2.bias [512]
encoder.layers.2.blocks.13.norm1.weight [512]
encoder.layers.2.blocks.13.norm1.bias [512]
encoder.layers.2.blocks.13.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.13.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.13.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.13.attn.qkv.bias [1536]
encoder.layers.2.blocks.13.attn.proj.weight [512, 512]
encoder.layers.2.blocks.13.attn.proj.bias [512]
encoder.layers.2.blocks.13.norm2.weight [512]
encoder.layers.2.blocks.13.norm2.bias [512]
encoder.layers.2.blocks.13.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.13.mlp.fc1.bias [2048]
encoder.layers.2.blocks.13.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.13.mlp.fc2.bias [512]
encoder.layers.2.blocks.14.norm1.weight [512]
encoder.layers.2.blocks.14.norm1.bias [512]
encoder.layers.2.blocks.14.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.14.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.14.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.14.attn.qkv.bias [1536]
encoder.layers.2.blocks.14.attn.proj.weight [512, 512]
encoder.layers.2.blocks.14.attn.proj.bias [512]
encoder.layers.2.blocks.14.norm2.weight [512]
encoder.layers.2.blocks.14.norm2.bias [512]
encoder.layers.2.blocks.14.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.14.mlp.fc1.bias [2048]
encoder.layers.2.blocks.14.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.14.mlp.fc2.bias [512]
encoder.layers.2.blocks.15.norm1.weight [512]
encoder.layers.2.blocks.15.norm1.bias [512]
encoder.layers.2.blocks.15.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.15.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.15.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.15.attn.qkv.bias [1536]
encoder.layers.2.blocks.15.attn.proj.weight [512, 512]
encoder.layers.2.blocks.15.attn.proj.bias [512]
encoder.layers.2.blocks.15.norm2.weight [512]
encoder.layers.2.blocks.15.norm2.bias [512]
encoder.layers.2.blocks.15.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.15.mlp.fc1.bias [2048]
encoder.layers.2.blocks.15.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.15.mlp.fc2.bias [512]
encoder.layers.2.blocks.16.norm1.weight [512]
encoder.layers.2.blocks.16.norm1.bias [512]
encoder.layers.2.blocks.16.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.16.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.16.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.16.attn.qkv.bias [1536]
encoder.layers.2.blocks.16.attn.proj.weight [512, 512]
encoder.layers.2.blocks.16.attn.proj.bias [512]
encoder.layers.2.blocks.16.norm2.weight [512]
encoder.layers.2.blocks.16.norm2.bias [512]
encoder.layers.2.blocks.16.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.16.mlp.fc1.bias [2048]
encoder.layers.2.blocks.16.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.16.mlp.fc2.bias [512]
encoder.layers.2.blocks.17.norm1.weight [512]
encoder.layers.2.blocks.17.norm1.bias [512]
encoder.layers.2.blocks.17.attn.relative_position_bias_table [529, 16]
encoder.layers.2.blocks.17.attn.relative_position_index [144, 144]
encoder.layers.2.blocks.17.attn.qkv.weight [1536, 512]
encoder.layers.2.blocks.17.attn.qkv.bias [1536]
encoder.layers.2.blocks.17.attn.proj.weight [512, 512]
encoder.layers.2.blocks.17.attn.proj.bias [512]
encoder.layers.2.blocks.17.norm2.weight [512]
encoder.layers.2.blocks.17.norm2.bias [512]
encoder.layers.2.blocks.17.mlp.fc1.weight [2048, 512]
encoder.layers.2.blocks.17.mlp.fc1.bias [2048]
encoder.layers.2.blocks.17.mlp.fc2.weight [512, 2048]
encoder.layers.2.blocks.17.mlp.fc2.bias [512]
encoder.layers.2.downsample.reduction.weight [1024, 2048]
encoder.layers.2.downsample.norm.weight [2048]
encoder.layers.2.downsample.norm.bias [2048]
encoder.layers.3.blocks.0.norm1.weight [1024]
encoder.layers.3.blocks.0.norm1.bias [1024]
encoder.layers.3.blocks.0.attn.relative_position_bias_table [529, 32]
encoder.layers.3.blocks.0.attn.relative_position_index [144, 144]
encoder.layers.3.blocks.0.attn.qkv.weight [3072, 1024]
encoder.layers.3.blocks.0.attn.qkv.bias [3072]
encoder.layers.3.blocks.0.attn.proj.weight [1024, 1024]
encoder.layers.3.blocks.0.attn.proj.bias [1024]
encoder.layers.3.blocks.0.norm2.weight [1024]
encoder.layers.3.blocks.0.norm2.bias [1024]
encoder.layers.3.blocks.0.mlp.fc1.weight [4096, 1024]
encoder.layers.3.blocks.0.mlp.fc1.bias [4096]
encoder.layers.3.blocks.0.mlp.fc2.weight [1024, 4096]
encoder.layers.3.blocks.0.mlp.fc2.bias [1024]
encoder.layers.3.blocks.1.norm1.weight [1024]
encoder.layers.3.blocks.1.norm1.bias [1024]
encoder.layers.3.blocks.1.attn.relative_position_bias_table [529, 32]
encoder.layers.3.blocks.1.attn.relative_position_index [144, 144]
encoder.layers.3.blocks.1.attn.qkv.weight [3072, 1024]
encoder.layers.3.blocks.1.attn.qkv.bias [3072]
encoder.layers.3.blocks.1.attn.proj.weight [1024, 1024]
encoder.layers.3.blocks.1.attn.proj.bias [1024]
encoder.layers.3.blocks.1.norm2.weight [1024]
encoder.layers.3.blocks.1.norm2.bias [1024]
encoder.layers.3.blocks.1.mlp.fc1.weight [4096, 1024]
encoder.layers.3.blocks.1.mlp.fc1.bias [4096]
encoder.layers.3.blocks.1.mlp.fc2.weight [1024, 4096]
encoder.layers.3.blocks.1.mlp.fc2.bias [1024]
encoder.norm0.weight [128]
encoder.norm0.bias [128]
encoder.norm1.weight [256]
encoder.norm1.bias [256]
encoder.norm2.weight [512]
encoder.norm2.bias [512]
encoder.norm3.weight [1024]
encoder.norm3.bias [1024]
IntegrityPriorLoss.sobel_x.weight [1, 1, 3, 3]
IntegrityPriorLoss.sobel_y.weight [1, 1, 3, 3]
[DEBUG] Embed dim=128 Layers 4 Depths [2, 2, 18, 2] Num Heads [4, 8, 16, 32] Window size: 12 (BiRefNet-SET - arch.py:153)
[DEBUG] Model backbone: swin_v1_b (BiRefNet-SET - arch.py:170)
[DEBUG] Model type: PDFNet (BiRefNet-SET - arch.py:255)
Model type: PDFNet
Back bone type: swin_v1_b
Model version: 1
